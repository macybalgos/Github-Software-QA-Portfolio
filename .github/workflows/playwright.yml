# # .github/workflows/playwright.yml
# name: Playwright Tests

# on:
#   push:
#     branches: [ main, master ]
#   pull_request:
#     branches: [ main, master ]
#   workflow_dispatch: {} # allows manual run from GitHub UI

# jobs:
#   test:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout repo
#         uses: actions/checkout@v4

#       - name: Use Node.js 20
#         uses: actions/setup-node@v4
#         with:
#           node-version: '20'

#       - name: Install dependencies
#         run: npm ci

#       - name: Install Playwright browsers and deps
#         run: npx playwright install --with-deps

#       - name: Run Playwright tests 
#         # --reporter=list for readable logs, reporters configured in playwright.config.js still produce files
#         run: npx playwright test --reporter=list

#       - name: Upload Playwright HTML report
#         if: always()
#         uses: actions/upload-artifact@v4
#         with:
#           name: playwright-report
#           path: playwright-report
#           retention-days: 30

#       - name: Upload JUnit / test-results
#         if: always()
#         uses: actions/upload-artifact@v4
#         with:
#           name: test-results
#           path: test-results
#           retention-days: 30

# .github/workflows/playwright.yml
# name: Playwright Tests

# on:
#   push:
#     branches: [ main, master ]
#   pull_request:
#     branches: [ main, master ]
#   workflow_dispatch: {} # allows manual run from GitHub UI

# jobs:
#   test:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repo
#         uses: actions/checkout@v4

#       - name: Use Node.js 20
#         uses: actions/setup-node@v4
#         with:
#           node-version: '20'

#       - name: Install dependencies
#         run: npm ci

#       - name: Install Playwright browsers and deps
#         run: npx playwright install --with-deps

#       - name: Run Playwright tests
#         # --reporter=list ensures console logs are readable
#         run: npx playwright test --reporter=list

#       # üìä Upload HTML report
#       - name: Upload Playwright HTML report
#         if: always()
#         uses: actions/upload-artifact@v4
#         with:
#           name: playwright-report
#           path: playwright-report
#           retention-days: 30

#       # üìÑ Upload JUnit / test results (CI integration)
#       - name: Upload JUnit / test-results
#         if: always()
#         uses: actions/upload-artifact@v4
#         with:
#           name: test-results
#           path: test-results
#           retention-days: 30

#       # üñºÔ∏è Upload screenshots
#       - name: Upload screenshots
#         if: always()
#         uses: actions/upload-artifact@v4
#         with:
#           name: screenshots
#           path: test-results/**/*.png
#           retention-days: 30

#       # üé• Upload videos
#       - name: Upload videos
#         if: always()
#         uses: actions/upload-artifact@v4
#         with:
#           name: videos
#           path: test-results/**/*.webm
#           retention-days: 30

#       # üîç Upload Playwright traces (great for debugging failures)
#       - name: Upload traces
#         if: always()
#         uses: actions/upload-artifact@v4
#         with:
#           name: traces
#           path: test-results/**/*.zip
#           retention-days: 30

#           - name: Install dependencies
#           run: npm ci

# name: Playwright Tests

# on:
#   push:
#     branches: [ main, master ]
#   pull_request:
#     branches: [ main, master ]
#   workflow_dispatch: {} # allows manual run from GitHub UI

# permissions:
#   contents: write

# jobs:
#   test:
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout repo
#         uses: actions/checkout@v4

#       - name: Use Node.js 20
#         uses: actions/setup-node@v4
#         with:
#           node-version: '20'

#       - name: Install dependencies
#         run: npm install

#       - name: Install Playwright browsers and deps
#         run: npx playwright install --with-deps

#       - name: Run Playwright tests with Allure
#         run: npx playwright test --reporter=list,allure-playwright

#       # üìä Upload Playwright HTML report
#       - name: Upload Playwright HTML report
#         if: always()
#         uses: actions/upload-artifact@v4
#         with:
#           name: playwright-report
#           path: playwright-report
#           retention-days: 30

#       # üìÑ Upload JUnit / test results
#       - name: Upload JUnit / test-results
#         if: always()
#         uses: actions/upload-artifact@v4
#         with:
#           name: test-results
#           path: test-results
#           retention-days: 30

#       # üñºÔ∏è Upload screenshots
#       - name: Upload screenshots
#         if: always()
#         uses: actions/upload-artifact@v4
#         with:
#           name: screenshots
#           path: test-results/**/*.png
#           retention-days: 30

#       # üé• Upload videos
#       - name: Upload videos
#         if: always()
#         uses: actions/upload-artifact@v4
#         with:
#           name: videos
#           path: test-results/**/*.webm
#           retention-days: 30

#       # üîç Upload Playwright traces
#       - name: Upload traces
#         if: always()
#         uses: actions/upload-artifact@v4
#         with:
#           name: traces
#           path: test-results/**/*.zip
#           retention-days: 30

#       # ‚ñ∂Ô∏è Run Playwright tests with Allure
#       - name: Run Playwright tests with Allure
#         run: |
#           npx playwright test --reporter=list,allure-playwright

#       # üìà Install Allure CLI
#       - name: Install Allure CLI
#         run: |
#           npm install -g allure-commandline --save-dev

#       # üìà Generate Allure Report
#       - name: Generate Allure Report
#         if: always()
#         run: |
#           allure generate ./allure-results --clean -o ./allure-report
#           ls -l ./allure-report

#       # üì¶ Upload Allure Report Artifact
#       - name: Upload Allure Report
#         if: always()
#         uses: actions/upload-artifact@v4
#         with:
#           name: allure-report
#           path: allure-report
#           retention-days: 30

#       # üåê Deploy Allure Report to GitHub Pages
#       - name: Deploy Allure Report to GitHub Pages
#         if: always()
#         uses: peaceiris/actions-gh-pages@v3
#         with:
#           github_token: ${{ secrets.GITHUB_TOKEN }}
#           publish_dir: ./allure-report
#           publish_branch: gh-pages


            
name: Playwright Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: {} # allows manual run from GitHub UI

permissions:
  contents: write

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # üß© Checkout code
      - name: Checkout repo
        uses: actions/checkout@v4

      # ‚öôÔ∏è Setup Node.js
      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      # üì¶ Install dependencies
      - name: Install dependencies
        working-directory: automation/playwright
        run: npm install

      # üß∞ Install Playwright browsers & dependencies
      - name: Install Playwright browsers and deps
        working-directory: automation/playwright
        run: npx playwright install --with-deps

      # ‚ñ∂Ô∏è Run Playwright tests with Allure
      - name: Run Playwright tests with Allure
        working-directory: automation/playwright
        run: npx playwright test --reporter=list,allure-playwright

      # üìä Upload Playwright HTML report
      - name: Upload Playwright HTML report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: automation/playwright/playwright-report
          retention-days: 30

      # üìÑ Upload JUnit / test results
      - name: Upload JUnit / test-results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: automation/playwright/test-results
          retention-days: 30

      # üñºÔ∏è Upload screenshots
      - name: Upload screenshots
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: screenshots
          path: automation/playwright/test-results/**/*.png
          retention-days: 30

      # üé• Upload videos
      - name: Upload videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: videos
          path: automation/playwright/test-results/**/*.webm
          retention-days: 30

      # üîç Upload Playwright traces
      - name: Upload traces
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: traces
          path: automation/playwright/test-results/**/*.zip
          retention-days: 30

      # üìà Install Allure CLI
      - name: Install Allure CLI
        working-directory: automation/playwright
        run: npm install -g allure-commandline --save-dev

      # üìä Generate Allure Report
      - name: Generate Allure Report
        if: always()
        working-directory: automation/playwright
        run: |
          allure generate ./allure-results --clean -o ./allure-report
          ls -l ./allure-report

      # üì¶ Upload Allure Report Artifact
      - name: Upload Allure Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: allure-report
          path: automation/playwright/allure-report
          retention-days: 30

      # üåê Deploy Allure Report to GitHub Pages
      - name: Deploy Allure Report to GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: automation/playwright/allure-report
          publish_branch: gh-pages
